{"level":"info","message":"Server is running on port 3000","timestamp":"2024-11-19T05:56:07.037Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-11-19T05:56:09.856Z"}
{"code":"42P01","file":"parse_relation.c","length":104,"level":"error","line":"1452","message":"Error in fetching all users: relation \"users\" does not exist","name":"error","position":"15","routine":"parserOpenTable","severity":"ERROR","stack":"error: relation \"users\" does not exist\n    at C:\\Code\\PostgreSQL CRUD API\\node_modules\\pg-pool\\index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async userModel.findAll (C:\\Code\\PostgreSQL CRUD API\\src\\models\\user.model.js:20:24)\n    at async UserService.getAllUsers (C:\\Code\\PostgreSQL CRUD API\\src\\services\\user.service.js:9:12)\n    at async getAllUsers (C:\\Code\\PostgreSQL CRUD API\\src\\controllers\\user.controller.js:20:21)","timestamp":"2024-11-19T05:58:22.768Z"}
{"level":"error","message":"error: relation \"users\" does not exist\n    at C:\\Code\\PostgreSQL CRUD API\\node_modules\\pg-pool\\index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async userModel.findAll (C:\\Code\\PostgreSQL CRUD API\\src\\models\\user.model.js:20:24)\n    at async UserService.getAllUsers (C:\\Code\\PostgreSQL CRUD API\\src\\services\\user.service.js:9:12)\n    at async getAllUsers (C:\\Code\\PostgreSQL CRUD API\\src\\controllers\\user.controller.js:20:21)","timestamp":"2024-11-19T05:58:22.771Z"}
{"code":"42P01","file":"parse_relation.c","length":104,"level":"error","line":"1452","message":"Error in creating user: relation \"users\" does not exist","name":"error","position":"13","routine":"parserOpenTable","severity":"ERROR","stack":"error: relation \"users\" does not exist\n    at C:\\Code\\PostgreSQL CRUD API\\node_modules\\pg-pool\\index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async userModel.create (C:\\Code\\PostgreSQL CRUD API\\src\\models\\user.model.js:10:24)\n    at async UserService.createUser (C:\\Code\\PostgreSQL CRUD API\\src\\services\\user.service.js:5:12)\n    at async createUser (C:\\Code\\PostgreSQL CRUD API\\src\\controllers\\user.controller.js:7:20)","timestamp":"2024-11-19T05:59:15.224Z"}
{"level":"error","message":"error: relation \"users\" does not exist\n    at C:\\Code\\PostgreSQL CRUD API\\node_modules\\pg-pool\\index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async userModel.create (C:\\Code\\PostgreSQL CRUD API\\src\\models\\user.model.js:10:24)\n    at async UserService.createUser (C:\\Code\\PostgreSQL CRUD API\\src\\services\\user.service.js:5:12)\n    at async createUser (C:\\Code\\PostgreSQL CRUD API\\src\\controllers\\user.controller.js:7:20)","timestamp":"2024-11-19T05:59:15.225Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-11-19T06:00:18.070Z"}
{"code":"42P01","file":"parse_relation.c","length":104,"level":"error","line":"1452","message":"Error in creating user: relation \"users\" does not exist","name":"error","position":"13","routine":"parserOpenTable","severity":"ERROR","stack":"error: relation \"users\" does not exist\n    at C:\\Code\\PostgreSQL CRUD API\\node_modules\\pg-pool\\index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async userModel.create (C:\\Code\\PostgreSQL CRUD API\\src\\models\\user.model.js:10:24)\n    at async UserService.createUser (C:\\Code\\PostgreSQL CRUD API\\src\\services\\user.service.js:5:12)\n    at async createUser (C:\\Code\\PostgreSQL CRUD API\\src\\controllers\\user.controller.js:7:20)","timestamp":"2024-11-19T06:00:21.551Z"}
{"level":"error","message":"error: relation \"users\" does not exist\n    at C:\\Code\\PostgreSQL CRUD API\\node_modules\\pg-pool\\index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async userModel.create (C:\\Code\\PostgreSQL CRUD API\\src\\models\\user.model.js:10:24)\n    at async UserService.createUser (C:\\Code\\PostgreSQL CRUD API\\src\\services\\user.service.js:5:12)\n    at async createUser (C:\\Code\\PostgreSQL CRUD API\\src\\controllers\\user.controller.js:7:20)","timestamp":"2024-11-19T06:00:21.552Z"}
{"code":"42P01","file":"parse_relation.c","length":104,"level":"error","line":"1452","message":"Error in creating user: relation \"users\" does not exist","name":"error","position":"13","routine":"parserOpenTable","severity":"ERROR","stack":"error: relation \"users\" does not exist\n    at C:\\Code\\PostgreSQL CRUD API\\node_modules\\pg-pool\\index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async userModel.create (C:\\Code\\PostgreSQL CRUD API\\src\\models\\user.model.js:10:24)\n    at async UserService.createUser (C:\\Code\\PostgreSQL CRUD API\\src\\services\\user.service.js:5:12)\n    at async createUser (C:\\Code\\PostgreSQL CRUD API\\src\\controllers\\user.controller.js:7:20)","timestamp":"2024-11-19T06:04:09.043Z"}
{"level":"error","message":"error: relation \"users\" does not exist\n    at C:\\Code\\PostgreSQL CRUD API\\node_modules\\pg-pool\\index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async userModel.create (C:\\Code\\PostgreSQL CRUD API\\src\\models\\user.model.js:10:24)\n    at async UserService.createUser (C:\\Code\\PostgreSQL CRUD API\\src\\services\\user.service.js:5:12)\n    at async createUser (C:\\Code\\PostgreSQL CRUD API\\src\\controllers\\user.controller.js:7:20)","timestamp":"2024-11-19T06:04:09.045Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-11-19T06:04:56.737Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-11-19T06:05:00.298Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-11-19T06:05:09.237Z"}
{"level":"info","message":"User created successfully","timestamp":"2024-11-19T06:05:17.065Z"}
{"level":"info","message":"User created successfully","timestamp":"2024-11-19T06:06:08.036Z"}
{"level":"info","message":"User 2 updated successfully","timestamp":"2024-11-19T06:07:23.132Z"}
